#!/usr/bin/env zshzparseopts -A zopts \    -image-version: \    -registry::-"jessenich91" \    -repository::-"alpine-zsh" \    -glibc::-"false" \    -alpine-version:: \    -openssh-version:: \    -help:: local image_version="$zopts[--image-version]"local alpine_version="$zopts[--alpine-version]"local openssh_version="$zopts[--openssh-version]"local glibc="zopts[--glibc]"local help_arg="$zopts[--help]"local repository_root="."if [[ "$help_arg" ]] then    echo 'Usage:         /bin/zsh docker-build.sh \ Call into script using zsh            --image-version x.x.x \ specify required image tag            [ --alpine-version=3.13.5 ] \ specify optional alpine version            [ --openssh-version=8.1_p1-r0 ] specify optional openssh-version'fiif [[ -z "${alpine_version}" ]]then    alpine_version="3.13.5"fiif [[ -z "${openssh_version}" ]]then    openssh_version="8.1_p1-r0"filocal target_stage="glibc"if [[ "${glibc}"=="false" ]]then    target_stage="ohmyzsh"fidocker buildx build \    -f "${repository_root}/Dockerfile" \    -t "${registry}/${repository}:latest" \    -t "${registry}/${repository}:${image_version}" \    --build-arg "ALPINE_VERSION=${alpine_version}" \    --build-arg "OPENSSH_VERSION=${openssh_version}" \    --target "${target_stage}"    "${repository_root}"   if [[ ! "${glibc}"=="false" ]]then    docker tag "${registry}/${repository}:latest" "${registry}/${repository}:glibc-latest"    docker tag "${registry}/${repository}:latest" "${registry}/${repository}:glibc-${image_version}"fi